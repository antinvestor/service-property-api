syntax = "proto3";

package apis;
option go_package = ".;property_v1";

import "validate.proto";
import "common.proto";
import "google/protobuf/timestamp.proto";


message Locality{
    string ID = 1 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}"}];
    string parentID = 2 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}"}];
    string latLong = 3 [(validate.rules).string = {min_len: 10, max_len: 100}];
    string boundary = 4 [(validate.rules).string = {min_len: 10, max_len: 2048}];
    string name = 5 [(validate.rules).string = {min_len: 3, max_len: 60}];
    string description = 6 [(validate.rules).string = {ignore_empty: true, min_len:50}];
    map<string, string> extras = 7;
    google.protobuf.Timestamp createdAt = 8;
}

message PropertyState {
    string ID = 1 [(validate.rules).string = {min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}"}];
    string propertyID = 2 [(validate.rules).string = {min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}"}];
    apis.STATE state = 3;
    apis.STATUS status = 4;
    string name = 5 [(validate.rules).string = {min_len: 3, max_len: 60}];
    string description = 6 [(validate.rules).string = {ignore_empty: true, min_len:50}];
    map<string, string> extras = 7;
    google.protobuf.Timestamp createdAt = 8;
}

message PropertyType{
    string ID = 1 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
    string name = 2 [(validate.rules).string = {min_len: 3, max_len: 60}];
    string description = 3 [(validate.rules).string = {ignore_empty: true, min_len:50}];
    map<string, string> extra = 4;
    google.protobuf.Timestamp createdAt = 5;
}

message Subscription {
    string ID = 1 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
    string propertyID = 2 [(validate.rules).string = {min_len: 3, max_len: 40}];
    string profileID = 3 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len:50}];
    string role = 4 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len:50}];
    map<string, string> extra = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp expiresAt = 7;
}

message Property {
    string ID = 1 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
    string parentID = 2 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
    string name = 3 [(validate.rules).string = {min_len: 3, max_len: 60}];
    string description = 4 [(validate.rules).string = {ignore_empty: true, min_len:50}];
    PropertyType propertyType = 5 [(validate.rules).message.required = true];
    Locality locality = 6 [(validate.rules).message = {required: false, skip: false}];
    google.protobuf.Timestamp startedAt = 7 [(validate.rules).timestamp.lt_now = true];
    google.protobuf.Timestamp createdAt = 8;
    map<string, string> extra = 9 [(validate.rules).map = {ignore_empty: true, values: {string: {min_len: 3}}}];
}

message RequestID {
    string ID = 1 [(validate.rules).string = {min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
}

message UpdateRequest {
    string ID = 1 [(validate.rules).string = {min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
    apis.STATE state = 2;
    apis.STATUS status = 3;
    string name = 4 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 60}];;
    string description = 5 [(validate.rules).string = {ignore_empty: true, min_len: 60}];;
    string guardianID = 6 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
    string localityID = 7 [(validate.rules).string = {ignore_empty: true, min_len: 3, max_len: 40, pattern: "[0-9a-z_-]{3,20}" }];
    map<string, string> extras = 8 [(validate.rules).map = {ignore_empty: true, values: {string: {min_len: 3}}}];

}

message SearchRequest {
    string query = 1;
}

message SubscriptionListRequest{
    string propertyID = 1;
    string query = 2;
}

service PropertyService {

    //Create method for adding a new property type into the system
    rpc AddPropertyType (PropertyType) returns (PropertyType);

    //List method for showing all property types in the system
    rpc ListType (SearchRequest) returns (stream PropertyType);

    //Create method for adding a new locality into the system
    rpc AddLocality (Locality) returns (Locality);

    //Delete method for removing an existing locality from the system
    rpc DeleteLocality (RequestID) returns (Locality);

    //Create method for adding a new property into the system
    rpc CreateProperty (Property) returns (PropertyState);

    //Update property request to modify its current form to another
    rpc UpdateProperty (UpdateRequest) returns (Property);

    //Delete property request to modify its current form to another
    rpc DeleteProperty (RequestID) returns (PropertyState);

    //State request to determine active state and status of a property
    rpc StateOfProperty (RequestID) returns (PropertyState);

    //History request returns all the state transitions a property has had over its lifetime in the system
    rpc HistoryOfProperty (RequestID) returns (stream PropertyState);

    //Search method is for client request to query for properties that match query
    rpc SearchProperty (SearchRequest) returns (stream Property);

    //ListSubscriptions for a particular property
    rpc ListSubscriptions(SubscriptionListRequest) returns (stream Subscription);

    //AddSubscription for a profile to a property
    rpc AddSubscription(Subscription) returns (Subscription);

    //Delete subscription of profile to a property
    rpc DeleteSubscription (RequestID) returns (PropertyState);

}